[tools]
python = "system"

[tasks]
install:uv = { description = "Install Astral uv locally (~/.local/bin)", run = "curl -LsSf https://astral.sh/uv/install.sh | sh" }
setup = { description = "Install dependencies via uv", run = "uv sync" }
run = { description = "Run Streamlit app", run = "uv run streamlit run app.py" }
dev = { description = "Run app (alias)", run = "mise run run" }
sample = { description = "Generate sample SAR files", run = "mkdir -p samples && sar -o samples/sar_v12.dat 1 5 >/dev/null && sadf -j samples/sar_v12.dat -- -A > samples/sar_v12.json && LC_ALL=C sadf -d samples/sar_v12.dat -- -A > samples/sar_v12.csv" }
fmt = { description = "Format with ruff", run = "uv run ruff format ." }
lint = { description = "Lint with ruff", run = "uv run ruff check ." }
lint-fix = { description = "Lint with ruff and apply fixes", run = "uv run ruff check . --fix" }
typecheck = { description = "Type-check with pyright", run = "uv run pyright" }
check = { description = "Lint + Type-check", run = "uv run ruff check . && uv run pyright" }
qa = { description = "Format(check) + Lint + Type-check", run = "uv run ruff format --check . && uv run ruff check . && uv run pyright" }
clean = { description = "Clean generated artifacts", run = "rm -f samples/uploaded.dat && find . -name __pycache__ -type d -exec rm -rf {} +" }
