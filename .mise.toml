[tools]
uv = "latest"

[tasks]
setup = { description = "Deps + git hooks", run = "uv sync && uv run pre-commit install --install-hooks" }
run = { description = "Run app", run = "uv run streamlit run app.py" }
sample = { description = "Generate SAR samples", run = "mkdir -p samples && sar -o samples/sar_v12.dat 1 5 >/dev/null && sadf -j samples/sar_v12.dat -- -A > samples/sar_v12.json && LC_ALL=C sadf -d samples/sar_v12.dat -- -A > samples/sar_v12.csv" }
fmt = { description = "Format code", run = "uv run ruff format ." }
lint = { description = "Lint code", run = "uv run ruff check ." }
fix = { description = "Apply lint fixes", run = "uv run ruff check . --fix" }
type = { description = "Type-check", run = "uv run pyright" }
check = { description = "Format(check)+Lint+Type", run = "uv run ruff format --check . && uv run ruff check . && uv run pyright" }
test = { description = "Run tests", run = "uv run pytest -q" }
clean = { description = "Clean artifacts", run = "rm -f samples/uploaded.dat && find . -name __pycache__ -type d -exec rm -rf {} +" }
precommit = { description = "Run pre-commit all", run = "uv run pre-commit run --all-files" }
